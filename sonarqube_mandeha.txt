Step 2: Run SonarQube with Docker

    Pull the SonarQube Docker image:

    You can pull the official SonarQube image from Docker Hub using the following command:

docker pull sonarqube

or 

docker pull sonarqube:9.9.0

This will download the latest version of the SonarQube image.

Run SonarQube in a Docker container:

To run SonarQube with Docker, execute the following command. This will start SonarQube in a Docker container, mapping the necessary ports.

docker run -d --name sonarqube -p 9000:9000 sonarqube

    -d: Runs the container in detached mode (in the background).
    --name sonarqube: Names the container "sonarqube".
    -p 9000:9000: Maps port 9000 on your host to port 9000 in the container (SonarQube's default web port).

If you're running SonarQube with an external database (e.g., PostgreSQL), you can link the container to your database and configure the sonar.properties file inside the container. But for the default configuration (H2 database), no further steps are needed.

Verify the container is running:

To verify that SonarQube is running properly, use:

docker ps

You should see something like this:

    CONTAINER ID   IMAGE          COMMAND                  CREATED         STATUS         PORTS                    NAMES
    abc12345xyz    sonarqube      "/bin/bash /opt/sonarâ€¦"   10 seconds ago  Up 8 seconds   0.0.0.0:9000->9000/tcp   sonarqube

Step 3: Access SonarQube

Once the container is running, open a browser and go to:

http://localhost:9000


You should see the SonarQube interface. The default login credentials are:

    Username: admin
    Password: admin

Step 4: (Optional) Running SonarQube with a Database

If you want to use an external database (like PostgreSQL or MySQL), you can set environment variables when running the Docker container. Here's an example for PostgreSQL:

    First, you need to run a PostgreSQL container. For example:

docker run -d --name sonarqube-db -e POSTGRES_PASSWORD=yourpassword -e POSTGRES_USER=sonar -e POSTGRES_DB=sonar -p 5432:5432 postgres:alpine

Then, start SonarQube and link it to the database:

    docker run -d --name sonarqube -p 9000:9000 --link sonarqube-db:db -e SONARQUBE_JDBC_URL=jdbc:postgresql://db:5432/sonar -e SONARQUBE_JDBC_USERNAME=sonar -e SONARQUBE_JDBC_PASSWORD=yourpassword sonarqube

        --link sonarqube-db:db: Links the PostgreSQL container to the SonarQube container.
        -e SONARQUBE_JDBC_URL=jdbc:postgresql://db:5432/sonar: Specifies the connection string to the PostgreSQL database.
        -e SONARQUBE_JDBC_USERNAME=sonar: Database username.
        -e SONARQUBE_JDBC_PASSWORD=yourpassword: Database password.

Step 5: Stop and Remove the Docker Containers (If Needed)

If you want to stop the SonarQube container:

docker stop sonarqube

To remove the container (after stopping it):

docker rm sonarqube

Final Notes:

    Persistence: By default, SonarQube data (including your analysis results) is not persistent when running in a container. To make the data persistent, you should mount volumes. For example:

    docker run -d --name sonarqube -p 9000:9000 -v sonarqube_data:/opt/sonarqube/data -v sonarqube_extensions:/opt/sonarqube/extensions sonarqube

    Scaling: If you need to scale SonarQube for production, consider setting up a Docker Compose or Kubernetes deployment for managing multiple services.

By following these steps, you should be able to quickly spin up a SonarQube instance using Docker and start analyzing your code.



Not run : 
sudo apt-get install sonarscanner

INSTALL VISUAL : 
sudo snap install --classic code


cd Downloads

mkdir sample

git clone https://github.com/pknowledge/sample.git



open with visul : 


download sonar-scan at docs.sonarsource.com


sqp_0ce28a37da7f2fd6c1dfcc901910eded3e3392e8


replace by real path 

sonar-scanner \
  -Dsonar.projectKey=sample \
  -Dsonar.sources=. \
  -Dsonar.host.url=http://localhost:9000 \
  -Dsonar.token=sqp_0ce28a37da7f2fd6c1dfcc901910eded3e3392e8
to 
/home/devsecops/Downloads/sonar-scanner-6.2.1.4610-linux-x64/bin/sonar-scanner \
  -Dsonar.projectKey=sample \
  -Dsonar.sources=. \
  -Dsonar.host.url=http://localhost:9000 \
  -Dsonar.token=sqp_0ce28a37da7f2fd6c1dfcc901910eded3e3392e8


https://marketplace.visualstudio.com/items?itemName=SonarSource.sonarlint-vscode

Find all report at : 
http://localhost:9000/dashboard?id=sample&codeScope=overall

